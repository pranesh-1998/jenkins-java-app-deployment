
pipeline {
    agent any
    environment {
        DOCKER_CREDENTIALS_ID = 'docker-credentials-id' // The ID of your Docker credentials
        DOCKER_REGISTRY_URL = 'https://index.docker.io/v1/' // Docker Hub registry URL
        DOCKER_IMAGE_NAME = 'pranesh1998/java-maven-app:latest' // Docker image name
        CONTAINER_NAME = 'my-java-maven-app-container' // Name of the Docker container
        HOST_PORT = '8083' // Host port to map
        CONTAINER_PORT = '8080' // Container port
    }

    stages {
        stage('Build') {
            steps {
                script {
                    // Build the Maven project
                    docker.image('maven:3.8.1-jdk-11').inside {
                        sh 'mvn clean package -P PROD'
                    }
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image using the generated artifact
                    def dockerImage = docker.build("pranesh1998/java-maven-app:latest", ".")
                    return dockerImage // Return Docker Image variable
                }
            }
        }
        stage('Push Docker Image') {
            steps {
                script {
                    // Securely log in to Docker Hub and push the Docker image
                    def dockerImage = docker.image("pranesh1998/java-maven-app:latest")
                    withDockerRegistry([credentialsId: DOCKER_CREDENTIALS_ID, url: DOCKER_REGISTRY_URL]) {
                        dockerImage.push()
                    }
                }
            }
        }
        stage('deploy') {
            steps {
                script {
                    // Pull the docker image
                    sh "docker pull ${DOCKER_IMAGE_NAME}"

                    // Stop and remove the container if it exists
                    sh """
                    if [ \$(docker ps -a -q -f name=${CONTAINER_NAME}) ]; then
                        docker stop ${CONTAINER_NAME} || true
                        docker rm ${CONTAINER_NAME} || true
                    fi
                    """

                    //Run the Docker container
                    sh """
                    docker run -d --name ${CONTAINER_NAME} -p ${HOST_PORT}:${CONTAINER_PORT} ${DOCKER_IMAGE_NAME}
                    """
                }
            }
        }
    }
}
